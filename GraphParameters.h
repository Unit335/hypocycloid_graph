#pragma once

struct	GraphParameters				//Структура хранения параметров функции, значений масштабирования, количества точек, номера вычисляемой точки, изменения угла поворомата и максимального радиуса
{
public:
	double radius_inner;				//радиус внутренней(обегаемой) окружности
	double radius_outer;				//радиус внешней(обегающей) окружности
	double f;							//угол поворота обегающей окружности
	double Scale;						//амплитуда сигнала - его размер в поле графика
	double xMax;						//максимальный радиус значения x
	size_t nPoints;						//количество точек в графике
	size_t nCur;						//номер вычисляемой точки
	int yCenter;						//центр графика по координате y
	int xCenter;						//центр графика по координате x
	double dXRad;						//изменение угла поворота по таймеру
};

class CHypocycloidFun : public CWinThread					//класс с булевской функцией Calc, в котором будет происходить расчет точек графика
{
public:
	CHypocycloidFun();				//Конструктор класса
	~CHypocycloidFun();				//Деструктор класса
public:
	double X;						//локальная переменная для расчета координат точек по X
	double Y;						//локальная переменная для расчета координат точек по Y
public:
	bool Calc(double f, double radius_outer, double radius_inner);	//функция расчета точки с координатами X,Y.
																	//в неё передаются значения радиусов обегаемой и обегающей окружностей, а также угол поворота обегающей окружности
};

class CHypocycloidCalc : public CWinThread					//класс расчётов изменений графика функции, таких как масштабирование, сдвиг.
										//Также в нем производится наполнение массива точек графика и перемещение параметров из приложения в этот класс внутри собственной структуры 
{
public:
	CHypocycloidCalc();					//Конструктор класса
	~CHypocycloidCalc();				//Деструктор класса
protected:
	bool Scale(CPoint & pt, double ScaleX, double ScaleY, double f, double radius_outer, double radius_inner); //Функция расчёта изменений координат точек графика при масштабировании
	bool Shift(CPoint & pt);			//Функция расчёта изменений координат точек графика при их сдвиге
public:
	bool Calculate();					//функция с передачей параметров для построения графика по таймеру
	bool CalcContinuosly();				//функция с передачей параметров для моментального построения графика
	vector<POINT> *GetPoints();			//функция передачи массива координат точек в класс рисования графика
	bool SetParams(GraphParameters &par);//функция передачи данных о графике из приложения в класс расчётов
	int GetNumPoints();					//функция возвращает размер вектора с координатами точек графика
	vector<POINT> m_vecPt;				//массив координат точек
};